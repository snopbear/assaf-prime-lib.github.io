"use strict";(self.webpackChunkprime_lib_doc=self.webpackChunkprime_lib_doc||[]).push([[8415],{8527:(g,p,n)=>{n.d(p,{w:()=>l});const l=(e,c,s)=>{let a="";return e?.map(o=>{a+=`<p><span style="color: #b96ad9;">import</span> { <span style="color: rgb(0, 168, 133);">${o.import}</span> } <span style="color: rgb(185, 106, 217);">from</span> <span style="color: rgb(224, 62, 45);">'${o.from}'</span>;</p>`}),a+=`<p><span style="color: #169179;">@Component</span><span style="color: #b96ad9;">({</span><br>&nbsp; &nbsp; ...<br><span style="color: #b96ad9;">})</span><br><span style="color: #b96ad9;">export</span> <span style="color: #3598db;">class</span> <span style="color: #169179;">YourComponent</span>${s?'<span> <span style="color: rgb(85, 57, 130);">implements </span>'+s+"</span>":""} {<br>${c}<br>}</p>`,a}},8415:(g,p,n)=>{n.r(p),n.d(p,{TagManagerComponent:()=>o});var l=n(7979),e=n(8527);const c={setup:'&lt; script defer &gt;\n  window.dataLayer = window.dataLayer || [];\n  (function (w, d, s, l, i) {\n    w[l] = w[l] || [];\n    w[l].push({\n      "gtm.start": new Date().getTime(),\n      event: "gtm.js",\n    });\n    var f = d.getElementsByTagName(s)[0],\n      j = d.createElement(s),\n      dl = l != "dataLayer" ? "&l=" + l : "";\n    j.async = true;\n    j.src = "https://www.googletagmanager.com/gtm.js?id=" + i + dl;\n    f.parentNode.insertBefore(j, f);\n  })(window, document, "script", "dataLayer", "GTM-XXXX");\n  &lt; /script &gt;',services:'<div><span style="color: rgb(85, 57, 130);">import</span> { <span style="color: rgb(65, 168, 95);">Injectable</span> } <span style="color: rgb(85, 57, 130);">from</span> &quot;<span style="color: rgb(184, 49, 47);">@angular/core</span>&quot;;<br><span style="color: rgb(65, 168, 95);">@Injectable</span>({&nbsp;<br><span style="color: rgb(85, 57, 130);">&nbsp; &nbsp; providedIn</span>: &quot;root&quot;,<br>})<br><span style="color: rgb(147, 101, 184);">export</span> <span style="color: rgb(41, 105, 176);">class</span> <span style="color: rgb(65, 168, 95);">DataLayerService</span> {&nbsp;<br><span style="color: rgb(85, 57, 130);">&nbsp; &nbsp; private</span> <span style="color: rgb(41, 105, 176);">window : </span><span style="color: rgb(65, 168, 95);">any</span>;<br><span style="color: rgb(85, 57, 130);">&nbsp; &nbsp; constructor</span>() {<br><span style="color: rgb(124, 112, 107);">&nbsp; &nbsp; &nbsp; // intialize the window&nbsp;</span><br><span style="color: rgb(85, 57, 130);">&nbsp; &nbsp; &nbsp; this</span>.<span style="color: rgb(41, 105, 176);">window</span> =&nbsp;<span style="color: rgb(184, 49, 47);">window</span>;&nbsp;<br>&nbsp; &nbsp; }<br><span style="color: rgb(243, 121, 52);">&nbsp; &nbsp; createLog(</span><span style="color: rgb(41, 105, 176);">obj</span>: <span style="color: rgb(65, 168, 95);">any</span><span style="color: rgb(243, 121, 52);">)</span>: void {<br><span style="color: rgb(124, 112, 107);">&nbsp; &nbsp; //you can add any attributes you want to send it</span><br><span style="color: rgb(85, 57, 130);">&nbsp; &nbsp; &nbsp; this</span>.<span style="color: rgb(243, 121, 52);">executeHit(</span><span style="color: rgb(41, 105, 176);">obj</span><span style="color: rgb(243, 121, 52);">)</span>;&nbsp;<br>&nbsp; &nbsp; }<br><span style="color: rgb(85, 57, 130);">&nbsp; &nbsp; private</span> <span style="color: rgb(243, 121, 52);">executeHit(</span><span style="color: rgb(41, 105, 176);">obj</span>: <span style="color: rgb(65, 168, 95);">any</span><span style="color: rgb(243, 121, 52);">)</span> {&nbsp;<br><span style="color: rgb(85, 57, 130);">&nbsp; &nbsp; &nbsp; if&nbsp;</span>(<span style="color: rgb(41, 105, 176);">obj</span>) <span style="color: rgb(85, 57, 130);">this</span>.<span style="color: rgb(41, 105, 176);">window</span>.<span style="color: rgb(44, 130, 201);">dataLayer</span>?.<span style="color: rgb(243, 121, 52);">push(</span><span style="color: rgb(41, 105, 176);">obj</span><span style="color: rgb(243, 121, 52);">)</span>;<br>&nbsp; &nbsp; }<br>}</div>',logPageUage:(0,e.w)([{import:"Component",from:"@angular/core"},{import:"Router",from:"@angular/router"},{import:"DataLayerService",from:"../../services/dataLayer-service.service"}],'<p><span style="color: rgb(85, 57, 130);">&nbsp; &nbsp; constructor</span> (<span style="color: rgb(147, 101, 184);">private</span> <span style="color: rgb(41, 105, 176);">router</span> : &nbsp;<span style="color: rgb(65, 168, 95);">Router&nbsp;</span>,<span style="color: rgb(65, 168, 95);">&nbsp;</span><span style="color: rgb(147, 101, 184);">private</span><span style="color: rgb(65, 168, 95);">&nbsp;</span><span style="color: rgb(41, 105, 176);">_dataLayerService</span><span style="color: rgb(65, 168, 95);">&nbsp;</span>:<span style="color: rgb(65, 168, 95);">&nbsp;DataLayerService</span>){}<br><span style="color: rgb(243, 121, 52);">&nbsp; &nbsp; ngOnInit()</span>: void{<br><span style="color: rgb(85, 57, 130);">&nbsp; &nbsp; &nbsp; this</span>.<span style="color: rgb(41, 105, 176);">router</span>.<span style="color: rgb(41, 105, 176);">events</span>.<span style="color: rgb(243, 121, 52);">subscribe(</span>(<span style="color: rgb(41, 105, 176);">event :&nbsp;</span><span style="color: rgb(65, 168, 95);">any</span>)&nbsp;<span style="color: rgb(184, 49, 47);">=&gt;</span> {<br> &nbsp; &nbsp; &nbsp; if (<span style="color: rgb(41, 105, 176);">event</span> <span style="color: rgb(85, 57, 130);">instanceof</span> <span style="color: rgb(41, 105, 176);">NavigationEnd</span>) {&nbsp;<br>&nbsp; &nbsp; &nbsp; &nbsp;<span style="color: rgb(85, 57, 130);">const</span> <span style="color: rgb(41, 105, 176);">obj</span> = {<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style="color: rgb(44, 130, 201);">event</span>: &quot;content-view&quot;,&nbsp;<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style="color: rgb(44, 130, 201);">pageName</span>: event.url<br>&nbsp; &nbsp; &nbsp; &nbsp; };&nbsp;<br><span style="color: rgb(124, 112, 107);">&nbsp; &nbsp; &nbsp; &nbsp; //if our event is of our interest call our dataLayer service&apos;s page view&nbsp;<br>&nbsp; &nbsp; &nbsp; &nbsp; //method to executeHit with the url value.</span><br><span style="color: rgb(85, 57, 130);">&nbsp; &nbsp; &nbsp; &nbsp; this</span>.<span style="color: rgb(41, 105, 176);">_dataLayerService</span>.<span style="color: rgb(243, 121, 52);">createLog(</span>obj<span style="color: rgb(243, 121, 52);">)</span>;<br>&nbsp; &nbsp; &nbsp; }<br> &nbsp; &nbsp; }<span style="color: rgb(243, 121, 52);">)</span></span>'," OnInit"),logEventUage:(0,e.w)([{import:"Component",from:"@angular/core"},{import:"DataLayerService",from:"../../services/dataLayer-service.service"}],'<p><span style="color: rgb(85, 57, 130);">&nbsp; &nbsp; constructor</span> (<span style="color: rgb(85, 57, 130);">private</span> <span style="color: rgb(41, 105, 176);">_dataLayerService</span> :&nbsp;<span style="color: rgb(65, 168, 95);">DataLayerService</span>){}<br><span style="color: rgb(243, 121, 52);">&nbsp; &nbsp; onLoginBtnClick()</span>{<br>&nbsp; &nbsp; &nbsp; <span style="color: rgb(85, 57, 130);">const</span> <span style="color: rgb(41, 105, 176);">obj</span> =&nbsp;<br>&nbsp; &nbsp; &nbsp; &nbsp; {<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style="color: rgb(44, 130, 201);">event&nbsp;</span>: &apos;click&apos;,<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style="color: rgb(44, 130, 201);">category&nbsp;</span>: &apos;submitButtons&apos;,<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style="color: rgb(44, 130, 201);">action&nbsp;</span>: &apos;login&apos;,<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style="color: rgb(44, 130, 201);">label&nbsp;</span>:&nbsp; &quot;Login button&quot;<br>&nbsp; &nbsp; &nbsp; &nbsp; }<br><span style="color: rgb(85, 57, 130);">&nbsp; &nbsp; &nbsp; this</span>.<span style="color: rgb(41, 105, 176);">_dataLayerService</span>.<span style="color: rgb(243, 121, 52);">createLog(</span>obj<span style="color: rgb(243, 121, 52);">)</span>;<br>&nbsp; &nbsp; }</p>')};var s=n(4946),a=n(8558);let o=(()=>{class r{get steps(){return c}static#s=this.\u0275fac=function(t){return new(t||r)};static#n=this.\u0275cmp=s.Xpm({type:r,selectors:[["assaf-documentation-tag-manager"]],standalone:!0,features:[s.jDz],decls:67,vars:4,consts:[[1,"p-8"],[1,"text-4xl","font-bold","mb-4"],[1,"mt-10"],[1,"text-gray-600","mb-3"],[1,"my-3"],[1,"text-gray-900","mt-4","mb-2","text-xl","font-bold"],[1,"list-disc","ps-4","mb-4"],[1,"text-gray-800"],[1,"text-red-900","m-3","ms-0","text-xl"],[1,"mb-2","font-bold"],[1,"text-gray-800","mb-2"],[3,"tsText"]],template:function(t,b){1&t&&(s.TgZ(0,"section",0)(1,"h1",1),s._uU(2,"Tag Manager"),s.qZA(),s.TgZ(3,"div",2)(4,"p",3),s._uU(5," Google Tag Manager is a tag management system that allows you to easily add and manage various tracking codes and scripts on your website or mobile app, without the need for manual code changes. It provides a user-friendly interface that allows you to quickly and easily deploy and manage tags, which are snippets of code that track user behavior and send data to third-party tools like Google Analytics, AdWords, and other marketing and analytics platforms. "),s.qZA(),s.TgZ(6,"section",4)(7,"h3",5),s._uU(8," What are its benefits? "),s.qZA(),s.TgZ(9,"ul",6)(10,"li",7),s._uU(11,"Tracking pageviews and events"),s.qZA(),s.TgZ(12,"li",7),s._uU(13," Setting up conversion tracking for advertising campaigns "),s.qZA(),s.TgZ(14,"li",7),s._uU(15," Implementing remarketing and advertising tracking pixels "),s.qZA(),s.TgZ(16,"li",7),s._uU(17," Integrating with third-party tools and services "),s.qZA(),s.TgZ(18,"li",7),s._uU(19," Implementing custom tracking and analytics solutions "),s.qZA()()(),s.TgZ(20,"span",8),s._uU(21,"Please follow the next steps to implement "),s.TgZ(22,"strong"),s._uU(23,"Tag Manager"),s.qZA(),s._uU(24," in your project"),s.qZA(),s.TgZ(25,"section",4)(26,"header")(27,"h3",9),s._uU(28,"Step 1 :"),s.qZA(),s.TgZ(29,"p",10),s._uU(30," You need to add this Script in "),s.TgZ(31,"strong"),s._uU(32,"index.html"),s.qZA(),s._uU(33," and make sure that "),s.TgZ(34,"strong"),s._uU(35,"GTM-XXXX"),s.qZA(),s._uU(36," is your google tag manager account's ID "),s.qZA()(),s._UZ(37,"assaf-documentation-code-block",11),s.qZA(),s.TgZ(38,"section",4)(39,"header")(40,"h3",9),s._uU(41,"Step 2 :"),s.qZA(),s.TgZ(42,"p",10),s._uU(43," Make your service that manage Google Tag Manager functionality "),s.qZA()(),s._UZ(44,"assaf-documentation-code-block",11),s.qZA(),s.TgZ(45,"section",4)(46,"header")(47,"h3",9),s._uU(48,"Step 3 :"),s.qZA(),s.TgZ(49,"p",10),s._uU(50," use "),s.TgZ(51,"strong"),s._uU(52,"LogPage "),s.qZA(),s._uU(53,"in your shell or your entry point of app for example your "),s.TgZ(54,"strong"),s._uU(55,"app.component.ts"),s.qZA()()(),s._UZ(56,"assaf-documentation-code-block",11),s.qZA(),s.TgZ(57,"section",4)(58,"header")(59,"h3",9),s._uU(60,"Step 4 :"),s.qZA(),s.TgZ(61,"p",10),s._uU(62," use "),s.TgZ(63,"strong"),s._uU(64,"logEvent"),s.qZA(),s._uU(65," in any component has any element you need to track. "),s.qZA()(),s._UZ(66,"assaf-documentation-code-block",11),s.qZA()()()),2&t&&(s.xp6(37),s.Q6J("tsText",b.steps.setup),s.xp6(7),s.Q6J("tsText",b.steps.services),s.xp6(12),s.Q6J("tsText",b.steps.logPageUage),s.xp6(10),s.Q6J("tsText",b.steps.logEventUage))},dependencies:[l.m,a.P]})}return r})()}}]);