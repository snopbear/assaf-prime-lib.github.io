"use strict";(self.webpackChunkprime_lib_doc=self.webpackChunkprime_lib_doc||[]).push([[9185],{4897:(u,l,a)=>{a.d(l,{$:()=>i});const i=(d,p,m,t)=>({defaultValue:t,description:m,type:p,name:d})},9185:(u,l,a)=>{a.r(l),a.d(l,{InputInstallComponent:()=>$});var i=a(7979);a(7078);const m={import:(0,a(5384).s)([{import:"AssafInputModule",from:"assaf-prime-lib/@components/@input"}]),tsUse:'<div><span style="color: rgb(61, 142, 185);">form</span>: <span style="color: rgb(0, 168, 133);">FormGroup</span> = <span style="color: rgb(41, 105, 176);">this</span>.<span style="color: rgb(41, 105, 176);">_fb</span>.<span style="color: rgb(251, 160, 38);">group</span>({<br> <span style="color: rgb(61, 142, 185);">&nbsp; &nbsp; basic</span>: [ ,&nbsp;<span style="color: rgb(0, 168, 133);">Validators</span>.<span style="color: rgb(251, 160, 38);">required</span> ],<br>&nbsp; });<br><br><span style="color: rgb(41, 105, 176);">constructor</span>(<span style="color: rgb(41, 105, 176);">private</span> <span style="color: rgb(61, 142, 185);">_fb</span>: <span style="color: rgb(0, 168, 133);">FormBuilder</span>) {}</div>',htmlUse:'<form [formGroup]="form">\n  <assaf-input controlName="basic" label="Basic Input"></assaf-input>\n</form>'};var t=a(4897);const b=[(0,t.$)("type",['"text"','"tel"','"password"','"email"','"textarea"','"number"','"chips"'],"Sets input viewing & data type","'text'"),(0,t.$)("label","string","Sets input label text","undefined"),(0,t.$)("placeholder","string","Sets input placeholder text","'Placeholder'"),(0,t.$)("controlName","string","Form control name for data binding (need to be provided otherwise an exception is thrown)","undefined"),(0,t.$)("size",["'sm'","'lg'"],"Sets input size (for normal size don't set attribute)","undefined"),(0,t.$)("floatLabel","boolean","Displays label as floating label above input","false"),(0,t.$)("icon","string","Icon name to be placed next to input","undefined"),(0,t.$)("iconPos",["'left'","'right'"],"Sets icon position (works only if icon is provided)","'left'"),(0,t.$)("toggleMask","boolean","Shows icon that shows entered password text","false"),(0,t.$)("passwordFeedback","boolean","Shows password input feedback","false"),(0,t.$)("chipSeperator","string","Sets chip seperator character",","),(0,t.$)("controlErrors","FormInputErrors","Control errors messages","undefined"),(0,t.$)("styleClass","string","External styling class/es",'""'),(0,t.$)("autoSize","boolean","Enables textarea auto sizing when text is entered","false"),(0,t.$)("rows","number","Sets inital number of textarea rows (works only when autoSize is enabled)","2"),(0,t.$)("labelClass","string","External styling class for label (not when floatLabel is active)","undefiend"),(0,t.$)("autocomplete","boolean","Enables/disables auto complete for input type text only","true")],g=[(0,t.$)("required?","string","Form validator required error message"),(0,t.$)("minlength?","string","Form validator minimum length error message"),(0,t.$)("maxlength?","string","Form validator maximum length error message"),(0,t.$)("pattern?","string","Form validator pattern error message"),(0,t.$)("email?","string","Form validator email error message"),(0,t.$)("max?","string","Form validator maximum value error message"),(0,t.$)("min?","string","Form validator minimum value error message"),(0,t.$)("requiredTrue?","string","Form validator required true error message (used with checkboxes)")];var f=a(3763),h=a(2338),v=a(5619),e=a(4946),c=a(4844),x=a(622),y=a(6814);let Z=(()=>{class o{constructor(){this._isMobile=new v.X(0),this._headers=(0,f._)(),this.interfaceHeaders=(0,h.a)()}onResize(r){this._isMobile.next(r.target?.innerWidth)}get interfaces(){return g}get data(){return b}ngOnInit(){this._isMobile.next(window.innerWidth)}static#e=this.\u0275fac=function(n){return new(n||o)};static#t=this.\u0275cmp=e.Xpm({type:o,selectors:[["assaf-documentation-input-table"]],hostBindings:function(n,s){1&n&&e.NdJ("resize",function(I){return s.onResize(I)},!1,e.Jf7)},standalone:!0,features:[e.jDz],decls:10,vars:8,consts:[[3,"scrollable","styleClass"],["header","Properties","leftIcon","pi pi-cog"],[3,"tableColumns","data"],["header","Interfaces","leftIcon","pi-code pi"],[1,"font-bold","text-xl","mb-3"],[1,"text-gray-600","font-bold"]],template:function(n,s){1&n&&(e.TgZ(0,"p-tabView",0),e.ALo(1,"async"),e.TgZ(2,"p-tabPanel",1),e._UZ(3,"assaf-data-table",2),e.qZA(),e.TgZ(4,"p-tabPanel",3)(5,"h3",4),e._uU(6,"<FormInputErrors> Interface"),e.qZA(),e._UZ(7,"assaf-data-table",2),e.TgZ(8,"p",5),e._uU(9,"* ? indicates optional parameter"),e.qZA()()()),2&n&&(e.s9C("styleClass",s._isMobile.value<=768?"center-tabview":""),e.Q6J("scrollable",e.lcZ(1,6,s._isMobile)<=425),e.xp6(3),e.Q6J("tableColumns",s._headers)("data",s.data),e.xp6(4),e.Q6J("tableColumns",s.interfaceHeaders)("data",s.interfaces))},dependencies:[i.m,c.xf,c.x4,x.Yo,y.Ov]})}return o})();var T=a(8558);let $=(()=>{class o{get install(){return m}static#e=this.\u0275fac=function(n){return new(n||o)};static#t=this.\u0275cmp=e.Xpm({type:o,selectors:[["assaf-documentation-input-install"]],standalone:!0,features:[e.jDz],decls:26,vars:3,consts:[[1,"p-5"],[1,"text-4xl","font-bold","mb-4"],[1,"text-gray-600"],[1,"mt-10"],[1,"text-xl","font-bold"],[1,"mt-5"],[1,"text-gray-600","mb-3"],[3,"tsText"],[1,"my-10","mb-10"],[1,"text-[var(--orange-color)]","font-bold"],[3,"htmlText","tsText"]],template:function(n,s){1&n&&(e.TgZ(0,"section",0)(1,"h1",1),e._uU(2,"Assaf-Input"),e.qZA(),e.TgZ(3,"p",2),e._uU(4," Input component is a generic component that has all input modes "),e.qZA(),e.TgZ(5,"div",3)(6,"h2",4),e._uU(7,"Imports"),e.qZA(),e.TgZ(8,"div",5)(9,"p",6),e._uU(10," In your desired module add the below import: "),e.qZA(),e._UZ(11,"assaf-documentation-code-block",7),e.qZA()(),e.TgZ(12,"div",8)(13,"h2",4),e._uU(14,"Basic usage"),e.qZA(),e.TgZ(15,"div",5)(16,"p",6),e._uU(17," To start using assaf-input you have to create a "),e.TgZ(18,"span",9),e._uU(19,"form group"),e.qZA(),e._uU(20," with controls & "),e.TgZ(21,"span",9),e._uU(22,"place the input component inside"),e.qZA(),e._uU(23," this form group with providing contol name "),e.qZA(),e._UZ(24,"assaf-documentation-code-block",10),e.qZA()(),e._UZ(25,"assaf-documentation-input-table"),e.qZA()),2&n&&(e.xp6(11),e.Q6J("tsText",s.install.import),e.xp6(13),e.Q6J("htmlText",s.install.htmlUse)("tsText",s.install.tsUse))},dependencies:[i.m,T.P,Z]})}return o})()}}]);