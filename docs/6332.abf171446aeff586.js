"use strict";(self.webpackChunkprime_lib_doc=self.webpackChunkprime_lib_doc||[]).push([[6332],{8527:(u,c,o)=>{o.d(c,{w:()=>p});const p=(r,m,l)=>{let i="";return r?.map(d=>{i+=`<p><span style="color: #b96ad9;">import</span> { <span style="color: rgb(0, 168, 133);">${d.import}</span> } <span style="color: rgb(185, 106, 217);">from</span> <span style="color: rgb(224, 62, 45);">'${d.from}'</span>;</p>`}),i+=`<p><span style="color: #169179;">@Component</span><span style="color: #b96ad9;">({</span><br>&nbsp; &nbsp; ...<br><span style="color: #b96ad9;">})</span><br><span style="color: #b96ad9;">export</span> <span style="color: #3598db;">class</span> <span style="color: #169179;">YourComponent</span>${l?'<span> <span style="color: rgb(85, 57, 130);">implements </span>'+l+"</span>":""} {<br>${m}<br>}</p>`,i}},6332:(u,c,o)=>{o.r(c),o.d(c,{DynamicDialogComponent:()=>C});var p=o(7979),r=o(8527);const m={providers:'<div style="margin: 5px 0;"><div><div><span style="color: #b96ad9;">import </span>{ <span style="color: #169179;">DialogService</span> } <span style="color: #b96ad9;">from</span> <span style="color: #e03e2d;">\'primeng/dynamicdialog\'</span>;</div><div>@<span style="color: #169179;">NgModule({\n</span> <span style="color: #3598db;">providers</span>: <span style="color: #b96ad9;">[\n    <span style="color: #169179;">DialogService</span>\n]</span> <span style="color: #169179;">\n})</span></div></div></div><div style="margin: 5px 0;"><span style="color: #b96ad9;">export</span> <span style="color: #3598db;">class</span> <span style="color: #169179;">AppModule</span> { }</div>',inject:(0,r.w)([{import:"DynamicDialogService",from:"assaf-prime-lib/services"}],'<p><span style="color: rgb(85, 57, 130);">    constructor (private </span> <span style="color: #169179;">__dialog</span>: <span style="color: #169179;">DynamicDialogService</span><span style="color: #b96ad9;">){}\n        '),html:'\x3c!-- CallerComponent HTML --\x3e\n<assaf-button label="click here" (click)="dispalyDialog()"></assaf-button>\n\n\x3c!-- DialogExampleComponent HTML --\x3e\n<section class="text-center">\n    <p class="mb-4">{{__dialog.getData()}}</p>\n    <assaf-button label="close" (click)="closeDialog()"></assaf-button>\n</section>',ts:(0,r.w)([{import:"DisplayService",from:"assaf-prime-lib"}],'<p><span style="font-size: 12pt;"><span style="color: rgb(85, 57, 130);">&nbsp; &nbsp; constructor</span>(<span style="color: #b96ad9;">private&nbsp;</span>_dialog:<span style="color: #2dc26b;">DynamicDialogService</span>){}</span><span style="color: rgb(243, 121, 52);">&nbsp; &nbsp;&nbsp;</span><br><span style="color: #808080;">&lt;!-- showDialog Method =&gt; added in CallerComponent Ts file--&gt;</span><span style="color: rgb(243, 121, 52);">&nbsp; &nbsp;</span><br><span style="color: rgb(243, 121, 52);">&nbsp; &nbsp; displayDialog()</span><span style="color: rgb(0, 0, 0);">{</span> &nbsp;<br> <span style="color: #3598db;">&nbsp; &nbsp; &nbsp; this</span>.<span style="color: #b96ad9;">dialog</span>.<span style="color: rgb(243, 121, 52);">showDialog(</span><span style="text-decoration: underline; color: #008000;">DialogExampleComponent</span>,<span style="color: rgb(0, 0, 0);">&apos;Hello World&nbsp;</span><span style="color: rgb(226, 80, 65);">\u2764</span><span style="color: rgb(0, 0, 0);">!</span><span style="color: #f5bd07;">&apos;</span>,<span style="color: #670f96;">true</span>,<span style="color: rgb(0, 0, 0);">&quot;<br>        Basic Dialog&quot;,&quot;max-w-xl mx-auto&quot;</span><span style="color: rgb(243, 121, 52);">)</span>;<br><span style="color: rgb(0, 0, 0);">&nbsp; &nbsp; }</span><br><span style="color: #808080;">&lt;!-- closeDialog Method =&gt; added in DialogExampleComponent Ts file--&gt;</span><span style="color: rgb(243, 121, 52);">&nbsp; &nbsp;&nbsp;</span><br><span style="color: rgb(243, 121, 52);">&nbsp; &nbsp; closeDialog()</span><span style="color: rgb(0, 0, 0);">{</span> &nbsp;<br><span style="color: #3598db;">&nbsp; &nbsp; &nbsp; this</span>.<span style="color: #b96ad9;">_dialog</span>.<span style="color: rgb(243, 121, 52);">closeDialog()</span>;<span style="color: #169179;">&nbsp;</span><br><span style="color: #169179;">&nbsp; &nbsp;&nbsp;</span><span style="color: rgb(0, 0, 0);">}</span><span style="color: #169179;"><br></span></p>')};var l=o(1750);const h=[(0,l.S)("getData","Returns data passed to dialog window","(): any"),(0,l.S)("closeDialog","Close currently open dialog","(): void"),(0,l.S)("onDialogClose","Subscription to closed dialogs","():Observable<any>"),(0,l.S)("showDialog","Opens a dialog window with passed component",["(","component:Type<any>,data?:any,  ","maximizable?: boolean,","header?: string,","styleClass?: string,","dismissableMask?: boolean","):void"],["component: component to be displayed in dialog box.","data: passed to dialog window.","maximizable: shows/hides maximize icon.","header: sets header string.","styleClass: external styleclass for dialog box","dismissableMask: enables closing popup when click outside"])];var s=o(4946),b=o(5369),g=o(1572);let D=(()=>{class a{constructor(t,e){this.__dialog=t,this.__toast=e}closeDialog(){this.__dialog.closeDialog()}static#s=this.\u0275fac=function(e){return new(e||a)(s.Y36(b.W3),s.Y36(b.G9))};static#a=this.\u0275cmp=s.Xpm({type:a,selectors:[["assaf-documentation-dialog-example"]],standalone:!0,features:[s.jDz],decls:4,vars:1,consts:[[1,"text-center"],[1,"mb-4"],["label","close",3,"click"]],template:function(e,n){1&e&&(s.TgZ(0,"section",0)(1,"p",1),s._uU(2),s.qZA(),s.TgZ(3,"assaf-button",2),s.NdJ("click",function(){return n.closeDialog()}),s.qZA()()),2&e&&(s.xp6(2),s.Oqu(n.__dialog.getData()))},dependencies:[p.m,g.G]})}return a})();var f=o(8537),y=o(4844),v=o(5219),x=o(622);function T(a,S){if(1&a&&s._UZ(0,"assaf-data-table",2),2&a){const t=s.oxw();s.Q6J("tableColumns",t._headers)("data",t._methods)}}let Z=(()=>{class a{constructor(){this._headers=(0,f.s)()}get _methods(){return h}static#s=this.\u0275fac=function(e){return new(e||a)};static#a=this.\u0275cmp=s.Xpm({type:a,selectors:[["assaf-documentation-dialog-services-methods"]],standalone:!0,features:[s.jDz],decls:3,vars:0,consts:[["header","Methods","leftIcon","pi pi-cog"],["pTemplate","content"],[3,"tableColumns","data"]],template:function(e,n){1&e&&(s.TgZ(0,"p-tabView")(1,"p-tabPanel",0),s.YNc(2,T,1,2,"ng-template",1),s.qZA()())},dependencies:[p.m,y.xf,y.x4,v.jx,x.Yo]})}return a})();var _=o(8558);let C=(()=>{class a{constructor(t){this.__dialog=t}get install(){return m}dispalyDialog(){this.__dialog.showDialog(D,"Hello World \u2764!",!0,"BasicDialog","max-w-xl mx-auto")}static#s=this.\u0275fac=function(e){return new(e||a)(s.Y36(b.W3))};static#a=this.\u0275cmp=s.Xpm({type:a,selectors:[["assaf-documentation-dynamic-dialog"]],standalone:!0,features:[s.jDz],decls:25,vars:4,consts:[[1,"p-5"],[1,"text-4xl","font-bold","mb-4"],[1,"text-gray-600"],[1,"mt-10"],[1,"text-xl","font-bold"],[1,"mt-5"],[1,"text-gray-600","mb-3"],[3,"tsText"],[1,"text-gray-600","my-3"],[1,"my-10"],[1,"flex","justify-between","items-center","mb-3"],["label","click here",3,"click"],[3,"htmlText","tsText"]],template:function(e,n){1&e&&(s.TgZ(0,"section",0)(1,"h1",1),s._uU(2,"Assaf-Dynamic-Dialog"),s.qZA(),s.TgZ(3,"p",2),s._uU(4," Dynamic dialog is a service used to display dialog box ( Pop-up )on demand. "),s.qZA(),s.TgZ(5,"div",3)(6,"h2",4),s._uU(7,"Basic Usage"),s.qZA(),s.TgZ(8,"div",5)(9,"p",6),s._uU(10," Step1 : Firstly you need to add the DialogService in the AppModule providers "),s.qZA(),s._UZ(11,"assaf-documentation-code-block",7),s.TgZ(12,"p",8),s._uU(13," Step2 : Then inject the DynamicDialogService in your component's contructor as follows "),s.qZA(),s._UZ(14,"assaf-documentation-code-block",7),s.qZA()(),s.TgZ(15,"div",9)(16,"h2",4),s._uU(17,"Display Dialog"),s.qZA(),s.TgZ(18,"div",5)(19,"div",10)(20,"p",2),s._uU(21," To display dialog use the showDialog & pass the component to be viewed "),s.qZA(),s.TgZ(22,"assaf-button",11),s.NdJ("click",function(){return n.dispalyDialog()}),s.qZA()(),s._UZ(23,"assaf-documentation-code-block",12),s.qZA()(),s._UZ(24,"assaf-documentation-dialog-services-methods"),s.qZA()),2&e&&(s.xp6(11),s.Q6J("tsText",n.install.providers),s.xp6(3),s.Q6J("tsText",n.install.inject),s.xp6(9),s.Q6J("htmlText",n.install.html)("tsText",n.install.ts))},dependencies:[p.m,g.G,_.P,Z]})}return a})()}}]);