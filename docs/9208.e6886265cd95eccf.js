"use strict";(self.webpackChunkprime_lib_doc=self.webpackChunkprime_lib_doc||[]).push([[9208],{8527:(i,a,n)=>{n.d(a,{w:()=>b});const b=(t,c,s)=>{let e="";return t?.map(o=>{e+=`<p><span style="color: #b96ad9;">import</span> { <span style="color: rgb(0, 168, 133);">${o.import}</span> } <span style="color: rgb(185, 106, 217);">from</span> <span style="color: rgb(224, 62, 45);">'${o.from}'</span>;</p>`}),e+=`<p><span style="color: #169179;">@Component</span><span style="color: #b96ad9;">({</span><br>&nbsp; &nbsp; ...<br><span style="color: #b96ad9;">})</span><br><span style="color: #b96ad9;">export</span> <span style="color: #3598db;">class</span> <span style="color: #169179;">YourComponent</span>${s?'<span> <span style="color: rgb(85, 57, 130);">implements </span>'+s+"</span>":""} {<br>${c}<br>}</p>`,e}},9208:(i,a,n)=>{n.r(a),n.d(a,{PageTitleComponent:()=>o});var b=n(7979),t=n(8527);const c={howToUse:(0,t.w)([{import:"PageTitleService",from:"assaf-prime-lib"}],'<p><span style="color: rgb(85, 57, 130);">    constructor (private </span> <span style="color: #169179;">__pageTitle</span>: <span style="color: #169179;">PageTitleService</span>)\n    {\n      <p><span style="font-size: 17px;"><span style="color: rgb(26, 188, 156);">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;this.__pageTitle</span>.<span style="color: rgb(84, 172, 210);">setPageTitle</span>(<span style="color: rgb(226, 80, 65);">&quot;Page Title like About US&quot;</span>);&nbsp;</span></p>\n    }</span>'),eachPage:(0,t.w)([{import:"Router, NavigationEnd, ActivatedRoute",from:"@angular/router"},{import:"filter, map",from:"rxjs/operators"}],'<p><span style="font-size: 17px;"><span style="color: rgb(84, 172, 210);">title </span>= <span style="color: rgb(226, 80, 65);">&apos;angulartitle&apos;</span>;<br><br>&nbsp;&nbsp;<span style="color: rgb(84, 172, 210);"> ngOnInit</span>() { &nbsp; &nbsp;<br>&nbsp; &nbsp; <span style="color: rgb(147, 101, 184);">const </span><span style="color: rgb(84, 172, 210);">appTitle </span>= <span style="color: rgb(26, 188, 156);">this.__pageTitle</span>.<span style="color: rgb(84, 172, 210);">getPageTitle</span>(); &nbsp;<br>&nbsp; &nbsp; <span style="color: rgb(26, 188, 156);">this.router</span>.<span style="color: rgb(84, 172, 210);">events</span>.<span style="color: rgb(26, 188, 156);">pipe</span>(<span style="color: rgb(84, 172, 210);">filter</span>(<span style="color: rgb(26, 188, 156);">event </span>=&gt;<span style="color: rgb(226, 80, 65);"> event instanceof NavigationEnd</span>), <span style="color: rgb(84, 172, 210);">map</span>(() =&gt; { &nbsp;<br>&nbsp; &nbsp; <span style="color: rgb(147, 101, 184);">const </span><span style="color: rgb(44, 130, 201);">child </span>= <span style="color: rgb(26, 188, 156);">this.activatedRoute</span>.<span style="color: rgb(84, 172, 210);">firstChild</span>; &nbsp;<br><br>&nbsp; &nbsp; &nbsp; &nbsp; <span style="color: rgb(147, 101, 184);">if</span> (<span style="color: rgb(26, 188, 156);">child</span>.<span style="color: rgb(84, 172, 210);">snapshot</span>.<span style="color: rgb(26, 188, 156);">data</span>[<span style="color: rgb(226, 80, 65);">&apos;title&apos;</span>]) { &nbsp;<br> <span style="color: rgb(147, 101, 184);">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;return </span><span style="color: rgb(26, 188, 156);">child</span>.<span style="color: rgb(84, 172, 210);">snapshot</span>.<span style="color: rgb(26, 188, 156);">data</span>[<span style="color: rgb(226, 80, 65);">&apos;title&apos;</span>]; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;} &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style="color: rgb(147, 101, 184);">return </span><span style="color: rgb(44, 130, 201);">appTitle</span>; &nbsp;<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;})).<span style="color: rgb(84, 172, 210);">subscribe</span>((<span style="color: rgb(26, 188, 156);">ttl</span>: <span style="color: rgb(84, 172, 210);">string</span>) =&gt; {<span style="color: rgb(26, 188, 156);">this.__pageTitle</span>.<span style="color: rgb(84, 172, 210);">setPageTitle</span>(<span style="color: rgb(26, 188, 156);">ttl</span>); }); &nbsp;<br><br>} </span></p>'),eachPageRoutes:'<p><span style="font-size: 17px; color: rgb(147, 101, 184);">const </span><span style="font-size: 17px;"><span style="color: rgb(84, 172, 210);">routes</span>: <span style="color: rgb(97, 189, 109);">Routes</span>= [ </span></p>\n    <p><span style="font-size: 17px;">{ <span style="color: rgb(84, 172, 210);">path</span>:<span style="color: rgb(235, 107, 86);">&nbsp;</span><span style="color: rgb(226, 80, 65);">&apos;about</span><span style="color: rgb(235, 107, 86);">&apos;</span>, <span style="color: rgb(84, 172, 210);">component</span>: <span style="color: rgb(226, 80, 65);">AboutComponent</span>, <span style="color: rgb(84, 172, 210);">data</span>: {<span style="color: rgb(84, 172, 210);">title</span>: <span style="color: rgb(226, 80, 65);">&apos;About</span>&apos;}},&nbsp;</span></p>\n    <p><span style="font-size: 17px;">{ <span style="color: rgb(84, 172, 210);">path</span>:<span style="color: rgb(226, 80, 65);"> &apos;profile&apos;</span>, <span style="color: rgb(84, 172, 210);">component</span>: <span style="color: rgb(226, 80, 65);">MyprofileComponent</span>, <span style="color: rgb(84, 172, 210);">data</span>: {<span style="color: rgb(84, 172, 210);">title</span>: <span style="color: rgb(226, 80, 65);">&apos;Profile&apos;</span>} },&nbsp;</span></p>\n    <p><span style="font-size: 17px;">{ <span style="color: rgb(84, 172, 210);">path</span>: <span style="color: rgb(226, 80, 65);">&apos;myaccount&apos;</span>, <span style="color: rgb(84, 172, 210);">component</span>: <span style="color: rgb(226, 80, 65);">MyaccountComponent</span>, <span style="color: rgb(84, 172, 210);">data</span>: {<span style="color: rgb(84, 172, 210);">title</span>: <span style="color: rgb(226, 80, 65);">&apos;My Account&apos;</span>} },&nbsp;</span></p>\n    <p><span style="font-size: 17px;">{ <span style="color: rgb(84, 172, 210);">path</span>: <span style="color: rgb(226, 80, 65);">&apos;dashboard&apos;</span>, <span style="color: rgb(84, 172, 210);">component</span>: <span style="color: rgb(226, 80, 65);">DashboardComponent</span>, <span style="color: rgb(84, 172, 210);">data</span>: {<span style="color: rgb(84, 172, 210);">title</span>: <span style="color: rgb(226, 80, 65);">&apos;Dashboard&apos;</span>} }&nbsp;</span></p>\n    <p><span style="font-size: 17px;">];</span></p>',lazyLoaded:(0,t.w)([{import:"Router, NavigationEnd, ActivatedRoute",from:"@angular/router"},{import:"filter, map",from:"rxjs/operators"}],'<p><span style="font-size: 17px;">&nbsp; &nbsp; <span style="color: rgb(147, 101, 184);">const </span><span style="color: rgb(84, 172, 210);">appTitle </span>=<span style="color: rgb(97, 189, 109);"> this.__pageTitle</span>.<span style="color: rgb(84, 172, 210);">getPageTitle</span>();&nbsp;</span></p>\n    <p><span style="font-size: 17px;">&nbsp; &nbsp;<span style="color: rgb(26, 188, 156);">this.router</span> .<span style="color: rgb(84, 172, 210);">events</span>.<span style="color: rgb(26, 188, 156);">pipe</span>( <span style="color: rgb(84, 172, 210);">filter</span>(<span style="color: rgb(97, 189, 109);">event </span>=&gt; <span style="color: rgb(26, 188, 156);">event instance of NavigationEnd</span>),&nbsp;</span></p>\n    <p><span style="font-size: 17px;">&nbsp; &nbsp; &nbsp;<span style="color: rgb(84, 172, 210);">map</span>(() =&gt; {&nbsp;</span></p>\n    <p><span style="font-size: 17px;">&nbsp; &nbsp; &nbsp;<span style="color: rgb(84, 172, 210);">let&nbsp;</span><span style="color: rgb(26, 188, 156);">child&nbsp;</span>=<span style="color: rgb(26, 188, 156);">&nbsp;this.activatedRoute</span>.<span style="color: rgb(84, 172, 210);">firstChild</span>;</span></p>\n    <p><span style="font-size: 17px;">&nbsp; &nbsp; &nbsp;<span style="color: rgb(84, 172, 210);">while&nbsp;</span>(<span style="color: rgb(26, 188, 156);">child</span>.<span style="color: rgb(84, 172, 210);">firstChild</span>) {</span><span style="font-size: 17px;">&nbsp; <span style="color: rgb(84, 172, 210);">child&nbsp;</span>= <span style="color: rgb(26, 188, 156);">child</span>.<span style="color: rgb(84, 172, 210);">firstChild</span></span><span style="font-size: 17px;">}</span></p>\n    <p><span style="font-size: 17px;">&nbsp; &nbsp; <span style="color: rgb(147, 101, 184);">if</span><span style="color: rgb(84, 172, 210);">&nbsp;</span>(<span style="color: rgb(26, 188, 156);">child</span>.<span style="color: rgb(84, 172, 210);">snapshot</span>.<span style="color: rgb(26, 188, 156);">data</span>[<span style="color: rgb(226, 80, 65);">&apos;title&apos;</span>]) {</span></p>\n    <p><span style="font-size: 17px;">&nbsp; &nbsp; <span style="color: rgb(147, 101, 184);">return </span><span style="color: rgb(26, 188, 156);">child</span>.<span style="color: rgb(84, 172, 210);">snapshot</span>.<span style="color: rgb(26, 188, 156);">data</span>[<span style="color: rgb(226, 80, 65);">&apos;title&apos;</span>];&nbsp;</span></p>\n    <p><span style="font-size: 17px;">&nbsp; &nbsp;}&nbsp;</span></p>\n    <p><span style="font-size: 17px;">&nbsp; &nbsp; <span style="color: rgb(147, 101, 184);">return </span><span style="color: rgb(84, 172, 210);">appTitle</span>;&nbsp;</span></p>\n    <p><span style="font-size: 17px;">&nbsp; &nbsp; }) ).<span style="color: rgb(84, 172, 210);">subscribe</span>((<span style="color: rgb(26, 188, 156);">ttl</span>: <span style="color: rgb(84, 172, 210);">string</span>) =&gt; { <span style="color: rgb(26, 188, 156);">this.__pageTitle</span>.<span style="color: rgb(84, 172, 210);">setPageTitle</span>(<span style="color: rgb(26, 188, 156);">ttl</span>)});</span></p>',"onInit"),lazyLoadedModule:'<p><span style="color: rgb(147, 101, 184);">const&nbsp;</span><span style="color: rgb(84, 172, 210);">routes</span>: <span style="color: rgb(26, 188, 156);">Routes&nbsp;</span>= [&nbsp;</p>\n  <div>{ &nbsp; &nbsp;<span style="color: rgb(84, 172, 210);">path</span>: &apos; &apos;, &nbsp;<span style="color: rgb(26, 188, 156);">loadChildren</span>: () =&gt; <span style="color: rgb(147, 101, 184);">import</span>(<span style="color: rgb(226, 80, 65);">&apos;./features/auth/auth.module</span>&apos;).<span style="color: rgb(84, 172, 210);">then</span>((<span style="color: rgb(26, 188, 156);">module</span>) =&gt;<br> <span style="color: rgb(26, 188, 156);">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; module</span>.<span style="color: rgb(84, 172, 210);">AuthModule</span>), &nbsp;}</div>\n  <p>];</p>',lazyLoadedRoutes:'<p><span style="font-size: 17px;"><span style="color: rgb(147, 101, 184);">const </span><span style="color: rgb(84, 172, 210);">routes</span>: <span style="color: rgb(26, 188, 156);">Routes </span>= [&nbsp;</span></p>\n  <div><span style="font-size: 17px;">{ <span style="color: rgb(84, 172, 210);">path</span>:<span style="color: rgb(226, 80, 65);"> &apos;profile&apos;</span>, <span style="color: rgb(84, 172, 210);">component</span>: <span style="color: rgb(226, 80, 65);">ProfileComponent</span>, <span style="color: rgb(84, 172, 210);">data</span>: {<span style="color: rgb(84, 172, 210);">title</span>: <span style="color: rgb(226, 80, 65);">&apos;User Profile&apos;</span>} },&nbsp;<br>{ <span style="color: rgb(84, 172, 210);">path</span>: <span style="color: rgb(226, 80, 65);">&apos;myaccount&apos;</span>, <span style="color: rgb(84, 172, 210);">component</span>: <span style="color: rgb(226, 80, 65);">ListusersComponent</span>, <span style="color: rgb(84, 172, 210);">data</span>: {<span style="color: rgb(84, 172, 210);">title</span>: <span style="color: rgb(226, 80, 65);">&apos;List Users&apos;</span>} }</span></div>\n  <p><span style="font-size: 17px;">];</span></p>'};var s=n(4946),e=n(8558);let o=(()=>{class l{get steps(){return c}constructor(){}ngOnInit(){}static#s=this.\u0275fac=function(r){return new(r||l)};static#n=this.\u0275cmp=s.Xpm({type:l,selectors:[["assaf-documentation-page-title"]],standalone:!0,features:[s.jDz],decls:68,vars:6,consts:[[1,"p-7"],[1,"text-4xl","font-bold","mb-4"],[1,"mt-10"],[1,"text-gray-600","mb-3"],[1,"text-red-600"],[1,"text-red-900","m-3","text-xl"],[3,"tsText"],[1,"text-4xl","font-bold","m-4"],[1,"text-gray-600","m-3"],[1,"text-blue-300","m-3"],[1,"text-blue-900","m-3","underline"],[2,"list-style","disc","padding-left","30px"]],template:function(r,p){1&r&&(s.TgZ(0,"section",0)(1,"h1",1),s._uU(2,"PageTitleService"),s.qZA(),s.TgZ(3,"div",2)(4,"p",3),s._uU(5," The title tag is used to display the HTML page title in the browser\u2019s title bar. It is a required tag and important for "),s.TgZ(6,"b",4),s._uU(7,"Search Engine Optimization"),s.qZA(),s._uU(8,". An Angular application is considered a single page application (SPA). Sometimes we have to change browser title as you navigate through the pages. Title service is a very convenient method to read and set the document title. Angular doesn\u2019t recommend accessing the Document object manually to get and set the title. "),s.TgZ(9,"span",5),s._uU(10,"In your component please use that code as below:"),s.qZA()(),s._UZ(11,"assaf-documentation-code-block",6),s.qZA(),s.TgZ(12,"h2",7),s._uU(13," How to set the browser title for each page "),s.qZA(),s.TgZ(14,"div",2)(15,"p",8),s._uU(16," We need to define the routing module for our app with the data object. This is where we need to put our title. "),s.qZA(),s._UZ(17,"assaf-documentation-code-block",6),s.TgZ(18,"b",9),s._uU(19,"First : "),s.qZA(),s.TgZ(20,"p",8),s._uU(21," Let\u2019s see how we can implement this. First, we need to define the routing module for our app with the data object. This is where we need to put our title. "),s.qZA(),s.TgZ(22,"b",9),s._uU(23,"Second : "),s.qZA(),s.TgZ(24,"p",8),s._uU(25," We need to import Router and ActivatedRoute "),s.TgZ(26,"b"),s._uU(27,"In your Component"),s.qZA(),s._uU(28," so that we can subscribe to the router events and change the title with the Title service. We subscribe to router events and access the data with the help of ActivatedRoute and set the title with Page Title service. "),s.qZA(),s._UZ(29,"assaf-documentation-code-block",6),s.qZA(),s.TgZ(30,"h2",7),s._uU(31," How to set the browser title with lazy load Modules "),s.qZA(),s.TgZ(32,"div",2)(33,"p",8),s._uU(34," Most of the time we lazy load our modules to improve the performance. We need to do little changes since there are nested children. "),s.qZA(),s.TgZ(35,"p",10)(36,"b"),s._uU(37,"app-routing.module.ts "),s.qZA()(),s._UZ(38,"assaf-documentation-code-block",6),s.TgZ(39,"p",10)(40,"b"),s._uU(41,"auth-routing.module.ts "),s.qZA()(),s._UZ(42,"br")(43,"assaf-documentation-code-block",6),s.TgZ(44,"p",8),s._uU(45," We need to have while loop to loop until you find the last child "),s.qZA(),s._UZ(46,"assaf-documentation-code-block",6),s.qZA(),s.TgZ(47,"h2",7),s._uU(48,"Conclusion"),s.qZA(),s.TgZ(49,"p",3)(50,"b"),s._uU(51,"PageTitleService is a very convenient service to read and set the document title. Angular doesn\u2019t recommend accessing the Document object manually to get and set the title. "),s.qZA()(),s.TgZ(52,"h2")(53,"strong"),s._uU(54,"Summary"),s.qZA()(),s.TgZ(55,"ul",11)(56,"li"),s._uU(57,"Every single page app has an index.html"),s.qZA(),s.TgZ(58,"li"),s._uU(59," We can set the tile for the whole app with the title tag in the head section of index.html "),s.qZA(),s.TgZ(60,"li"),s._uU(61,"Title tag can\u2019t be accessed through Angular Data binding."),s.qZA(),s.TgZ(62,"li"),s._uU(63," Angular provides title service to get and set the current document title. "),s.qZA(),s.TgZ(64,"li"),s._uU(65," We can get and set the title for each page at one place with subscribing to angular routes. "),s.qZA(),s.TgZ(66,"li"),s._uU(67,"For nested modules, we have to loop until you find the last child."),s.qZA()()()),2&r&&(s.xp6(11),s.Q6J("tsText",p.steps.howToUse),s.xp6(6),s.Q6J("tsText",p.steps.eachPageRoutes),s.xp6(12),s.Q6J("tsText",p.steps.eachPage),s.xp6(9),s.Q6J("tsText",p.steps.lazyLoadedModule),s.xp6(5),s.Q6J("tsText",p.steps.lazyLoadedRoutes),s.xp6(3),s.Q6J("tsText",p.steps.lazyLoaded))},dependencies:[b.m,e.P]})}return l})()}}]);