"use strict";(self.webpackChunkprime_lib_doc=self.webpackChunkprime_lib_doc||[]).push([[7583],{8527:(d,r,e)=>{e.d(r,{w:()=>i});const i=(b,l,c)=>{let p="";return b?.map(m=>{p+=`<p><span style="color: #b96ad9;">import</span> { <span style="color: rgb(0, 168, 133);">${m.import}</span> } <span style="color: rgb(185, 106, 217);">from</span> <span style="color: rgb(224, 62, 45);">'${m.from}'</span>;</p>`}),p+=`<p><span style="color: #169179;">@Component</span><span style="color: #b96ad9;">({</span><br>&nbsp; &nbsp; ...<br><span style="color: #b96ad9;">})</span><br><span style="color: #b96ad9;">export</span> <span style="color: #3598db;">class</span> <span style="color: #169179;">YourComponent</span>${c?'<span> <span style="color: rgb(85, 57, 130);">implements </span>'+c+"</span>":""} {<br>${l}<br>}</p>`,p}},4897:(d,r,e)=>{e.d(r,{$:()=>i});const i=(b,l,c,p)=>({defaultValue:p,description:c,type:l,name:b})},7583:(d,r,e)=>{e.r(r),e.d(r,{MessageInstallComponent:()=>A});var i=e(7979),l=(e(744),e(4897));const c=[(0,l.$)("closable","boolean","Enables closing the message message","true"),(0,l.$)("styleClass","string","External style class for message","undefined"),(0,l.$)("key","string","Unique key identifier for message (MUST be provided)","undefined")];var p=e(5384),m=e(8527);const y={import:(0,p.s)([{import:"AssafMessagesModule",from:"assaf-prime-lib/@components/@messages"}]),htmlUse:'<assaf-messages key="1"></assaf-messages>',tsUse:(0,m.w)([{import:"DisplayService",from:"@assaf-garage/assaf-core-library/services"}],'<p><span style="color: rgb(41, 105, 176);">&nbsp; &nbsp; constructor</span> (<span style="color: rgb(41, 105, 176);">private</span> <span style="color: rgb(84, 172, 210);">__message</span>:&nbsp;<span style="color: rgb(0, 168, 133);">DisplayService</span>){}<br><span style="color: rgb(251, 160, 38);">&nbsp; &nbsp; showMessage</span> ():&nbsp;<span style="color: rgb(0, 168, 133);">void</span>{<br><span style="color: rgb(41, 105, 176);">&nbsp; &nbsp; &nbsp; this</span>.<span style="color: rgb(84, 172, 210);">__message</span>.<span style="color: rgb(251, 160, 38);">displayMessage</span>(<span style="color: rgb(235, 107, 86);">&apos;error&apos;</span>, <span style="color: rgb(235, 107, 86);">&apos;Error&apos;</span>,&nbsp;<span style="color: rgb(235, 107, 86);">&apos;1&apos;</span>);<br>&nbsp; &nbsp; }</p>'),serviceImport:'<p><span style="color: #b96ad9;">import</span> { <span style="color: rgb(0, 168, 133);">MessageService</span> } <span style="color: rgb(185, 106, 217);">from</span> <span style="color: rgb(224, 62, 45);">&apos;primeng/api&apos;</span>;</p>\n  <p>&nbsp; &nbsp; &nbsp;<br>@<span style="color: #169179;">NgModule</span><span style="color: #b96ad9;">({</span><br> <span style="color: #3598db;">&nbsp;providers: [</span><br> &nbsp;<span style="color: rgb(0, 168, 133);">&nbsp; MessageService</span><span style="color: #169179;">,</span><br> <span style="color: #169179;">&nbsp; &nbsp; //...</span><br> <span style="color: #3598db;">&nbsp; ],</span><br><span style="color: #169179;">//...</span><br><span style="color: #b96ad9;">})</span><br><span style="color: #b96ad9;">export</span> <span style="color: #3598db;">class</span> <span style="color: #169179;">AppModule</span> { }</p>'};var u=e(3763),f=e(7860),v=e(5619),s=e(4946),g=e(4844),h=e(5219),T=e(622),Z=e(6814);function x(a,I){if(1&a&&s._UZ(0,"assaf-data-table",3),2&a){const n=s.oxw();s.Q6J("tableColumns",n._headers)("data",n._properties)}}let M=(()=>{class a{constructor(){this._isMobile=new v.X(0),this._headers=(0,u._)()}onResize(n){this._isMobile.next(n.target?.innerWidth)}get _properties(){return(0,f.d)(c)}ngOnInit(){this._isMobile.next(window.innerWidth)}static#s=this.\u0275fac=function(t){return new(t||a)};static#e=this.\u0275cmp=s.Xpm({type:a,selectors:[["assaf-documentation-message-table"]],hostBindings:function(t,o){1&t&&s.NdJ("resize",function(C){return o.onResize(C)},!1,s.Jf7)},standalone:!0,features:[s.jDz],decls:4,vars:4,consts:[[3,"scrollable","styleClass"],["header","Properties","leftIcon","pi pi-cog"],["pTemplate","content"],[3,"tableColumns","data"]],template:function(t,o){1&t&&(s.TgZ(0,"p-tabView",0),s.ALo(1,"async"),s.TgZ(2,"p-tabPanel",1),s.YNc(3,x,1,2,"ng-template",2),s.qZA()()),2&t&&(s.s9C("styleClass",o._isMobile.value<=768?"center-tabview":""),s.Q6J("scrollable",s.lcZ(1,2,o._isMobile)<=425))},dependencies:[i.m,g.xf,g.x4,h.jx,T.Yo,Z.Ov]})}return a})();var U=e(8558);let A=(()=>{class a{get _install(){return y}static#s=this.\u0275fac=function(t){return new(t||a)};static#e=this.\u0275cmp=s.Xpm({type:a,selectors:[["assaf-documentation-message-install"]],standalone:!0,features:[s.jDz],decls:33,vars:4,consts:[[1,"p-5"],[1,"text-4xl","font-bold","mb-4"],[1,"text-gray-600"],[1,"mt-10"],[1,"text-xl","font-bold"],[1,"mt-5"],[1,"text-gray-600","mb-3"],[3,"tsText"],[1,"text-[var(--orange-color)]","font-bold"],[1,"my-10","mb-10"],[3,"htmlText","tsText"]],template:function(t,o){1&t&&(s.TgZ(0,"section",0)(1,"h1",1),s._uU(2,"Assaf-Messages"),s.qZA(),s.TgZ(3,"p",2),s._uU(4," Messages is a component that shows a message banner with desired color "),s.qZA(),s.TgZ(5,"div",3)(6,"h2",4),s._uU(7,"Imports"),s.qZA(),s.TgZ(8,"div",5)(9,"p",6),s._uU(10," In your desired module add the below import: "),s.qZA(),s._UZ(11,"assaf-documentation-code-block",7),s.qZA()(),s.TgZ(12,"div",5)(13,"p",6),s._uU(14," In your "),s.TgZ(15,"span",8),s._uU(16,"AppModule"),s.qZA(),s._uU(17," add the "),s.TgZ(18,"span",8),s._uU(19,"MessageService"),s.qZA(),s._uU(20," to the providers array "),s.qZA(),s._UZ(21,"assaf-documentation-code-block",7),s.qZA(),s.TgZ(22,"div",9)(23,"h2",4),s._uU(24,"Basic usage"),s.qZA(),s.TgZ(25,"div",5)(26,"p",6),s._uU(27," To start using assaf-messages you must provide value to "),s.TgZ(28,"span",8),s._uU(29,"key"),s.qZA(),s._uU(30," attribute "),s.qZA(),s._UZ(31,"assaf-documentation-code-block",10),s.qZA()(),s._UZ(32,"assaf-documentation-message-table"),s.qZA()),2&t&&(s.xp6(11),s.Q6J("tsText",o._install.import),s.xp6(10),s.Q6J("tsText",o._install.serviceImport),s.xp6(10),s.Q6J("htmlText",o._install.htmlUse)("tsText",o._install.tsUse))},dependencies:[i.m,U.P,M]})}return a})()}}]);