"use strict";(self.webpackChunkprime_lib_doc=self.webpackChunkprime_lib_doc||[]).push([[3994],{3994:(i,a,n)=>{n.r(a),n.d(a,{Html2canvasComponent:()=>c});var p=n(7979);const r={npm:"npm i html2canvas",screenshotTS:'<div>@<span style="color: rgb(0, 168, 133);">ViewChild</span>(<span style="color: rgb(184, 49, 47);">&apos;printSection&apos;</span>) <span style="color: rgb(61, 142, 185);">screen</span>!: <span style="color: rgb(0, 168, 133);">ElementRef</span>;<span style="color: rgb(243, 121, 52);"><br>html2canvas</span>(<span style="color: rgb(61, 142, 185);">screen.nativeElement</span>).<span style="color: rgb(243, 121, 52);">then</span>((<span style="color: rgb(61, 142, 185);">canvas</span>) =&gt; {<br> <span style="color: rgb(41, 105, 176);">const</span> <span style="color: rgb(61, 142, 185);">image</span> = <span style="color: rgb(184, 49, 47);">`&lt;img src=</span><span style="color: rgb(41, 105, 176);">${</span><span style="color: rgb(61, 142, 185);">canvas</span>.<span style="color: rgb(243, 121, 52);">toDataURL</span>(<br><span style="color: rgb(184, 49, 47);">&nbsp;&apos;image/png&apos;</span><br>)<span style="color: rgb(41, 105, 176);">}</span> <span style="color: rgb(184, 49, 47);">style=&apos;max-width: 100%; max-height: 80vh ; margin-top: 50px&apos;/&gt;`</span>;</div>',screenshotHTML:"<div #printSection>\n...\n</div>",printTs:'<div><span style="color: rgb(41, 105, 176);">const</span> <span style="color: rgb(61, 142, 185);">printWindow</span> = <span style="color: rgb(61, 142, 185);">window</span>.<span style="color: rgb(243, 121, 52);">open</span>(<span style="color: rgb(184, 49, 47);">&apos;&apos;, &apos;_blank&apos;</span>);<br><br><span style="color: rgb(61, 142, 185);">printWindow</span>?.<span style="color: rgb(61, 142, 185);">document</span>.<span style="color: rgb(243, 121, 52);">write</span>(<span style="color: rgb(184, 49, 47);">`</span><br> <span style="color: rgb(61, 142, 185);">&nbsp; &nbsp; &nbsp;${image}</span><br> &nbsp;<span style="color: rgb(184, 49, 47);">&lt;style type=&quot;text/css&quot; media=&quot;print&quot;&gt;<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; @page {<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; size: auto; &nbsp; /* auto is the initial value */<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; margin: 0mm; &nbsp;/* this affects the margin in the printer settings */<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<br>&nbsp; &lt;/style&gt;`</span>);<br><br> <span style="color: rgb(41, 105, 176);">const</span> <span style="color: rgb(61, 142, 185);">printTimeOut</span> =&nbsp;<span style="color: rgb(243, 121, 52);">setTimeout</span>(() =&gt; {<br> <span style="color: rgb(61, 142, 185);">&nbsp; &nbsp;printWindow</span>?.<span style="color: rgb(243, 121, 52);">print</span>();<br> <span style="color: rgb(243, 121, 52);">&nbsp; &nbsp;clearTimeout</span>(<span style="color: rgb(61, 142, 185);">printTimeOut</span>);<br> }, <span style="color: rgb(97, 189, 109);">50</span>);</div>'};var s=n(4946),l=n(8558);let c=(()=>{class t{get install(){return r}static#s=this.\u0275fac=function(e){return new(e||t)};static#n=this.\u0275cmp=s.Xpm({type:t,selectors:[["assaf-documentation-html2canvas"]],standalone:!0,features:[s.jDz],decls:21,vars:4,consts:[[1,"p-7"],[1,"text-4xl","font-bold","mb-4"],[1,"text-gray-600"],["href","https://www.npmjs.com/package/html2canvas?activeTab=readme","target","_blank",1,"text-[var(--primary-color)]","underline"],[1,"mt-10"],[3,"otherText"],[1,"text-gray-600","mb-3"],[1,"text-[var(--orange-color)]","font-bold"],[3,"tsText","htmlText"],[3,"tsText"]],template:function(e,o){1&e&&(s.TgZ(0,"section",0)(1,"h1",1),s._uU(2,"HTML2Canvas"),s.qZA(),s.TgZ(3,"p",2),s._uU(4,' HTML2Canvas is a package that allows you to take "screenshots" of webpages or parts of it, directly on the users browser. The screenshot is based on the DOM (follow this url for more info '),s.TgZ(5,"a",3),s._uU(6,"https://www.npmjs.com/package/html2canvas"),s.qZA(),s._uU(7,") "),s.qZA(),s.TgZ(8,"div",4),s._UZ(9,"assaf-documentation-code-block",5),s.qZA(),s.TgZ(10,"div",4)(11,"p",6),s._uU(12," To take screenshot of html content firstly provide "),s.TgZ(13,"span",7),s._uU(14,"HTML element reference"),s.qZA(),s._uU(15," for the container element, then convert it to screenshot using code below "),s.qZA(),s._UZ(16,"assaf-documentation-code-block",8),s.qZA(),s.TgZ(17,"div",4)(18,"p",6),s._uU(19," To open taken screenshot in print dialog use code below "),s.qZA(),s._UZ(20,"assaf-documentation-code-block",9),s.qZA()()),2&e&&(s.xp6(9),s.Q6J("otherText",o.install.npm),s.xp6(7),s.Q6J("tsText",o.install.screenshotTS)("htmlText",o.install.screenshotHTML),s.xp6(4),s.Q6J("tsText",o.install.printTs))},dependencies:[p.m,l.P]})}return t})()}}]);