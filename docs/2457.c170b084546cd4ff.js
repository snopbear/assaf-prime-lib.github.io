"use strict";(self.webpackChunkprime_lib_doc=self.webpackChunkprime_lib_doc||[]).push([[2457],{8527:(m,c,n)=>{n.d(c,{w:()=>b});const b=(t,y,a)=>{let l="";return t?.map(i=>{l+=`<p><span style="color: #b96ad9;">import</span> { <span style="color: rgb(0, 168, 133);">${i.import}</span> } <span style="color: rgb(185, 106, 217);">from</span> <span style="color: rgb(224, 62, 45);">'${i.from}'</span>;</p>`}),l+=`<p><span style="color: #169179;">@Component</span><span style="color: #b96ad9;">({</span><br>&nbsp; &nbsp; ...<br><span style="color: #b96ad9;">})</span><br><span style="color: #b96ad9;">export</span> <span style="color: #3598db;">class</span> <span style="color: #169179;">YourComponent</span>${a?'<span> <span style="color: rgb(85, 57, 130);">implements </span>'+a+"</span>":""} {<br>${y}<br>}</p>`,l}},2457:(m,c,n)=>{n.r(c),n.d(c,{PipesComponent:()=>Z});var b=n(7979),t=n(8527);const y={providers:'<div style="margin: 5px 0;"><div><div><span style="color: #b96ad9;">import </span>{ <span style="color: #169179;">DatePipe, DecimalPipe</span> } <span style="color: #b96ad9;">from</span> <span style="color: #e03e2d;">\'@angular/common\'</span>;</div><div>@<span style="color: #169179;">NgModule({\n      </span> <span style="color: #3598db;">providers</span>: <span style="color: #b96ad9;">[<div><span style="color: #169179;">          DatePipe ,</span><span style="color: #999999;"> // for date pipe function</span><div><div><span style="color: #169179;">          DecimalPipe</span><span style="color: #999999;"> // for decimal pipe function</span><div>       ]</span> <span style="color: #169179;">\n      })</span></div></div></div><div style="margin: 5px 0;"><span style="color: #b96ad9;">export</span> <span style="color: #3598db;">class</span> <span style="color: #169179;">AppModule</span> { }</div>',inject:(0,t.w)([{import:"PipesService",from:"assaf-prime-lib/services"}],'<p><span style="color: #b96ad9;">constructor (private </span> <span style="color: #169179;">__pipes</span>: <span style="color: #169179;">PipesService</span><span style="color: #b96ad9;">){}\n    '),tableExample:(0,t.w)([{import:"PipesService ,TableColumn",from:"assaf-prime-lib/services"}],'<p><span style="color: rgb(85, 57, 130);">&nbsp; &nbsp; constructor</span><span style="color: #b96ad9;">&nbsp;(private&nbsp;</span> <span style="color: #169179;">__pipes</span>:&nbsp;<span style="color: #169179;">PipesService</span><span style="color: #b96ad9;">){}&nbsp;</span><br><span style="color: #169179;">&nbsp; &nbsp; userTable</span> :&nbsp;<span style="color: #169179;">Array &lt;TableColumn&gt;</span> = [<br> &nbsp; &nbsp; &nbsp; { <span style="color: rgb(61, 142, 185);">title</span>: &apos;First Name&apos;,<span style="color:rgb(61, 142, 185);">type</span>: &apos;text&apos; ,<span style="color:rgb(61, 142, 185);">dataKey</span>: &apos;firstName&apos; },&nbsp;<br>&nbsp; &nbsp; &nbsp; { <span style="color: rgb(61, 142, 185);">title</span>: &apos;Salary&apos;,<span style="color:rgb(61, 142, 185);">type</span>: &apos;text&apos; ,<span style="color:rgb(61, 142, 185);">dataKey</span>: &apos;salary&apos; , <span style="color: #169179;">pipe</span>: <span style="color: #3598db;">this</span>.<span style="color: #b96ad9;">__pipes</span>.<span style="color: #169179;">number</span> <span style="color: #169179;">&nbsp;</span><span style="color: rgb(0, 0, 0);">}</span><br><span style="color: rgb(0, 0, 0);">&nbsp; &nbsp; ]</span></p>\n    '),example:(0,t.w)([{import:"PipesService",from:"assaf-prime-lib/services"}],'<p><span style="color: rgb(85, 57, 130);">&nbsp; &nbsp; constructor</span><span style="color: #b96ad9;">&nbsp;(private&nbsp;</span> <span style="color: #169179;">__pipes</span>: <span style="color: rgb(65, 168, 95);">PipesService</span><span style="color: #b96ad9;">){}&nbsp;</span></p>\n<div style="margin: 5px 0;"><span style="color: rgb(243, 121, 52);">&nbsp; &nbsp; ngOnInit() {</span><br><span style="color: #5539d9;">&nbsp; &nbsp; &nbsp; const&nbsp;</span><span style="color: rgb(0, 168, 133);">pi</span>: <span style="color: rgb(65, 168, 95);">number</span> = <span style="color: rgb(40, 50, 78);">3.14159265359</span>;<span style="color: #999999;">&nbsp;</span><br><span style="color: rgb(0, 0, 0);">&nbsp; &nbsp; &nbsp; console</span><span style="color: rgb(243, 121, 52);">.log(</span><span style="color: rgb(41, 105, 176);">this.__pipes</span>.<span style="color: rgb(243, 121, 52);">number(</span><span style="color: #169179;">pi</span><span style="color: rgb(243, 121, 52);">))</span>; <span style="color: #999999;">//output =3.14,159,265,359</span><br><span style="color: #5539d9;">&nbsp; &nbsp; &nbsp; const&nbsp;</span><span style="color: #169179;">percent</span>:<span style="color: #169179;">string</span> =<span style="color: #333300;">&apos;0.89&apos;</span>;<br><span style="color: rgb(243, 121, 52);">&nbsp; &nbsp; &nbsp; </span><span style="color: rgb(0, 0, 0);">console</span><span style="color: rgb(243, 121, 52);">.log(</span><span style="color: #3598db;">this</span>.<span style="color: #b96ad9;">__pipes</span>.<span style="color: #169179;"><span style="color: rgb(243, 121, 52);">percentage(</span>percent<span style="color: rgb(243, 121, 52);">))</span></span>;<span style="color: #999999;">&nbsp;//output = 0.89 %&nbsp;</span><br><span style="color: #999999;">&nbsp; &nbsp; &nbsp;&nbsp;</span><span style="color: #5539d9;">const&nbsp;</span><span style="color: #169179;">name</span>:<span style="color: #169179;">string</span> =<span style="color: #f5bd07;"><span style="color: #333300;">&nbsp;&apos;ahmed&apos;</span><span style="color: #000000;">;</span></span><br><span style="color: rgb(243, 121, 52);">&nbsp; &nbsp; &nbsp; </span><span style="color: rgb(0, 0, 0);">console</span><span style="color: rgb(243, 121, 52);">.log(</span><span style="color: #3598db;">this</span>.<span style="color: #b96ad9;">__pipes</span>.<span style="color: #169179;"><span style="color: rgb(243, 121, 52);">upperCase(</span>name<span style="color: rgb(243, 121, 52);">))</span></span>; <span style="color: #999999;">//output = AHMED</span><br><span style="color: #5539d9;">&nbsp; &nbsp; &nbsp; const&nbsp;</span><span style="color: #169179;">name2</span>:<span style="color: #169179;">string</span> = <span style="color: #f5bd07;"><span style="color: #333300;">&apos;Chips&apos;</span><span style="color: #000000;">;</span></span><br><span style="color: #f5bd07;"><span style="color: #000000;">&nbsp; &nbsp; &nbsp;&nbsp;</span></span><span style="color: rgb(0, 0, 0);">console</span><span style="color: rgb(243, 121, 52);">.log(</span><span style="color: #3598db;">this</span>.<span style="color: #b96ad9;">__pipes</span>.<span style="color: #169179;"><span style="color: rgb(243, 121, 52);">lowerCase(</span>name2<span style="color: rgb(243, 121, 52);">))</span></span>;<span style="color: #999999;">&nbsp;//output = Chips</span><br><span style="color: #5539d9;">&nbsp; &nbsp; &nbsp; const&nbsp;</span><span style="color: #169179;">today</span>:<span style="color: #169179;">Date</span> =<span style="color: #169179;">new&nbsp;</span>Date();<br><span style="color: rgb(243, 121, 52);">&nbsp; &nbsp; &nbsp; </span><span style="color: rgb(0, 0, 0);">console</span><span style="color: rgb(243, 121, 52);">.log(</span><span style="color: #3598db;">this</span>.<span style="color: #b96ad9;">__pipes</span>.<span style="color: #169179;"><span style="color: rgb(243, 121, 52);">date(</span>today<span style="color: rgb(243, 121, 52);">))</span></span>; <span style="color: #999999;">//output = Mar 21, 2023</span><br><span style="color: rgb(243, 121, 52);">&nbsp; &nbsp; &nbsp; </span><span style="color: rgb(0, 0, 0);">console</span><span style="color: rgb(243, 121, 52);">.log(</span><span style="color: #3598db;">this</span>.<span style="color: #b96ad9;">__pipes</span>.<span style="color: rgb(243, 121, 52);">date(</span><span style="color: #169179;">today&nbsp;</span>, <span style="color: #333300;">&apos;short&apos;</span><span style="color: rgb(243, 121, 52);">))</span>; <span style="color: #999999;">//output = 3/21/23, 11:34&nbsp;</span><br><span style="color: #999999;">&nbsp; &nbsp; &nbsp;&nbsp;</span><span style="color: rgb(0, 0, 0);">console</span><span style="color: rgb(243, 121, 52);">.log(</span><span style="color: #3598db;">this</span>.<span style="color: #b96ad9;">__pipes</span>.<span style="color: rgb(243, 121, 52);">date(</span><span style="color: #169179;">today&nbsp;</span>, <span style="color: #333300;">&apos;medium&apos;</span><span style="color: rgb(243, 121, 52);">))</span>; <span style="color: #999999;">//output = March 21, 2023 at 11:34:54 AM GMT+2</span><br><span style="color: #999999;">&nbsp; &nbsp; &nbsp; // for rest of format follow this <span style="color: #169179;">link</span> <a href="https://angular.io/api/common/DatePipe" style="text-decoration: underline;">https://angular.io/api/common/DatePipe</a></span><br><span style="color: #b96ad9;"><span style="color: #5539d9;">&nbsp; &nbsp; &nbsp; const</span>&nbsp;</span><span style="color: #169179;">decimalNum</span>:<span style="color: #169179;">number</span> =&nbsp;<span style="color: #cc99ff;">342.7844214</span>;<br><span style="color: rgb(243, 121, 52);">&nbsp; &nbsp; &nbsp; </span><span style="color: rgb(0, 0, 0);">console</span><span style="color: rgb(243, 121, 52);">.log(</span><span style="color: #3598db;">this</span>.<span style="color: #b96ad9;">__pipes</span>.<span style="color: #169179;"><span style="color: rgb(243, 121, 52);">decimal(</span>decimalNum<span style="color: rgb(243, 121, 52);">))</span></span>; <span style="color: #999999;">//output = 342.785</span><br><span style="color: rgb(243, 121, 52);">&nbsp; &nbsp; &nbsp; </span><span style="color: rgb(0, 0, 0);">console</span><span style="color: rgb(243, 121, 52);">.log(</span><span style="color: #3598db;">this</span>.<span style="color: #b96ad9;">__pipes</span>.<span style="color: #169179;"><span style="color: rgb(243, 121, 52);">decimal(</span>decimalNum&nbsp;</span>, <span style="color: #333300;">&apos;4.2-5&apos;</span><span style="color: rgb(243, 121, 52);">))</span>;<span style="color: #999999;">&nbsp;//output = 0,342.78442</span><br><span style="color: #5539d9;">&nbsp; &nbsp; &nbsp; const&nbsp;</span><span style="color: #169179;">decimalNum2</span>:<span style="color: #169179;">number</span> =&nbsp;<span style="color: #cc99ff;">0.74</span>;<br><span style="color: rgb(243, 121, 52);">&nbsp; &nbsp; &nbsp; </span><span style="color: rgb(0, 0, 0);">console</span><span style="color: rgb(243, 121, 52);">.log(</span><span style="color: #3598db;">this</span>.<span style="color: #b96ad9;">__pipes</span>.<span style="color: #169179;"><span style="color: rgb(243, 121, 52);">decimal(</span>decimalNum2&nbsp;</span>, <span style="color: #333300;">&apos;1.0-0&apos;</span><span style="color: rgb(243, 121, 52);">))</span>; <span style="color: #999999;">//output = 1</span><br><span style="color: #169179;">&nbsp; &nbsp; }</span></div>')};var a=n(1750);const g=[(0,a.S)("number","Converts number to string with comma seperations","(value: number): string","value: to be converted"),(0,a.S)("percentage","Concats % sign to the end of value","(value: number | string): string","value: to be converted"),(0,a.S)("upperCase","Converts value to uppercase letters","(value: string): string","value: to be converted"),(0,a.S)("lowerCase","Converts value to lowercase letters","(value: string): string","value: to be converted"),(0,a.S)("date","Converts value to date format","(value: Date | string, format?: string, timezone?: string, locale?: string): string",["value: to be converted","format: date format to be converted to (follow this url: https://angular.io/api/common/DatePipe)","timezone: sets time format for date conversion",'locale: will format a value according to locale rules (ex: "en-US")']),(0,a.S)("decimal","Converts value to decimal format","(value: number | string, digitsInfo?: string, locale?: string): string",["value: to be converted",'digitsInfo: decimal format to be converted to use in this specific format ({minIntegerDigits}.{minFractionDigits}-{maxFractionDigits} ex: "1.1-2")','locale: will format a value according to locale rules (ex: "en-US")'])];var u=n(8537),s=n(4946),d=n(4844),v=n(5219),f=n(622);function h(p,P){if(1&p&&s._UZ(0,"assaf-data-table",2),2&p){const e=s.oxw();s.Q6J("tableColumns",e._headers)("data",e._methods)}}let x=(()=>{class p{constructor(){this._headers=(0,u.s)()}get _methods(){return g}static#s=this.\u0275fac=function(o){return new(o||p)};static#n=this.\u0275cmp=s.Xpm({type:p,selectors:[["assaf-documentation-pipes-methods"]],standalone:!0,features:[s.jDz],decls:3,vars:0,consts:[["header","Methods","leftIcon","pi pi-cog"],["pTemplate","content"],[3,"tableColumns","data"]],template:function(o,r){1&o&&(s.TgZ(0,"p-tabView")(1,"p-tabPanel",0),s.YNc(2,h,1,2,"ng-template",1),s.qZA()())},dependencies:[b.m,d.xf,d.x4,v.jx,f.Yo]})}return p})();var _=n(8558);let Z=(()=>{class p{ngOnInit(){}get install(){return y}static#s=this.\u0275fac=function(o){return new(o||p)};static#n=this.\u0275cmp=s.Xpm({type:p,selectors:[["assaf-documentation-pipes"]],standalone:!0,features:[s.jDz],decls:36,vars:4,consts:[[1,"p-5"],[1,"text-4xl","font-bold","mb-4"],[1,"text-gray-600"],[1,"my-10"],[1,"text-xl","font-bold"],[1,"mt-5"],[1,"text-gray-600","mb-3"],[3,"tsText"],[1,"text-gray-600","my-5"],[1,"underline"]],template:function(o,r){1&o&&(s.TgZ(0,"section",0)(1,"h1",1),s._uU(2,"assaf-Pipes"),s.qZA(),s.TgZ(3,"p",2),s._uU(4," Pipes service is a service that contain many conversion functions that can be used in any component. "),s.qZA(),s.TgZ(5,"div",3)(6,"h2",4),s._uU(7,"Basic Usage"),s.qZA(),s.TgZ(8,"div",5)(9,"p",6)(10,"b"),s._uU(11,"Step1"),s.qZA(),s._uU(12," : Inject the service in your component's constructor "),s.qZA(),s._UZ(13,"assaf-documentation-code-block",7),s.TgZ(14,"p",8)(15,"b"),s._uU(16,"Step2"),s.qZA(),s._uU(17," : Pipes service can be mainly used in assaf-datatable by providing the desired function to the pipe attribute "),s.qZA(),s._UZ(18,"assaf-documentation-code-block",7),s.TgZ(19,"p",8)(20,"b"),s._uU(21,"Hint"),s.qZA(),s._uU(22," : If you need to use date or decimal function you must to add "),s.TgZ(23,"b",9),s._uU(24,"DatePipe"),s.qZA(),s._uU(25," , "),s.TgZ(26,"b",9),s._uU(27,"DecimalPipe"),s.qZA(),s._uU(28," to AppModule providers Array. "),s.qZA(),s._UZ(29,"assaf-documentation-code-block",7),s.TgZ(30,"p",8)(31,"b"),s._uU(32,"Examples"),s.qZA()(),s._UZ(33,"assaf-documentation-code-block",7),s.qZA()(),s.TgZ(34,"section"),s._UZ(35,"assaf-documentation-pipes-methods"),s.qZA()()),2&o&&(s.xp6(13),s.Q6J("tsText",r.install.inject),s.xp6(5),s.Q6J("tsText",r.install.tableExample),s.xp6(11),s.Q6J("tsText",r.install.providers),s.xp6(4),s.Q6J("tsText",r.install.example))},dependencies:[b.m,_.P,x]})}return p})()}}]);